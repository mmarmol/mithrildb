; ========================
; Server Configuration
; ========================
[Server]

; HTTP port where the server will listen
Port = 5126


; ========================
; RocksDB Database Configuration
; ========================
[Database.RocksDB]

; Path to the persistent storage directory for RocksDB
DBPath = /data/db

; Create the database if it does not exist
CreateIfMissing = true

; Size of the in-memory write buffer in bytes
; Typical values: 33554432 (32MB), 67108864 (64MB)
WriteBufferSize = 33554432

; Maximum number of write buffers allowed in memory before flushing to disk
MaxWriteBufferNumber = 2

; Size of the block cache for read operations (in bytes)
; Affects read performance and RAM usage
BlockCacheSize = 134217728

; Frequency to dump internal statistics to logs (e.g., 1m, 5m, 30s)
StatsDumpPeriod = 1m

; Maximum number of open files allowed by RocksDB
; Increase this if you expect many SST files
MaxOpenFiles = 500

; Enable compression to save disk space
EnableCompression = false

; Compression algorithm: snappy (fast), zstd (compact), lz4, none
CompressionType = snappy


; ========================
; Default Write Options (for Put/Delete)
; ========================
[Database.RocksDB.WriteOptions]

; Force fsync to ensure data durability (safer but slower)
Sync = false

; Disable the Write-Ahead Log (WAL); not recommended in production
DisableWAL = false

; Prevents the operation from waiting when memtable is full
; true = prioritize speed, false = default safe behavior
NoSlowdown = false


; ========================
; Default Read Options (for Get)
; ========================
[Database.RocksDB.ReadOptions]

; true = populate read cache, false = do not cache (useful for single reads)
FillCache = true

; Read tier:
; - all: read from memory and disk
; - cache-only: read only from memory (useful for diagnostics and benchmarks)
ReadTier = all

; ========================
; Expiration Service Configuration
; ========================
[Expiration]

; Interval between expiration cycles (e.g., 30s, 1m)
TickInterval = 1m

; Maximum number of documents processed per cycle
MaxPerCycle = 500

; Whether to automatically scale MaxPerCycle based on load
AutoScale = true

; Minimum allowed MaxPerCycle when scaling down
MinPerCycle = 100

; Maximum allowed MaxPerCycle when scaling up
MaxPerCycleLimit = 5000

; How much to increase/decrease MaxPerCycle each time
ScaleStep = 100

; Threshold to scale down: if deleted docs < MaxPerCycle * threshold
ScaleDownThreshold = 0.25

; Threshold to scale up: if cycle duration < TickInterval * factor
ScaleUpFactor = 0.5

